install.packages("swirl")
yes
stop
stop()
clear
install.packages("swirl")
max(x)
x <- c(1,2,4,6)
min(x)
max(x)
x <- c(1,2,4,6)
min(x)
max(x)
max(x)
install_course("R Programming")
library(swirl)
library(swirl)
install_course("R Programming")
library(swirl)
install_course("R Programming")
swirl()
library(swirl)
install.packages("swirl")
library(stringi)
install.packages("stringi")
library(swirl)
ls()
rm(list=ls())
rm(list=ls())
install_course("R Programming")
swirl()
5 + 7
x<- 5+ 7
x
y <- x -3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 10
z * 2 + 100
my_sqer <- sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1,2,3,4) + c(0,10,100)
(z * 2 +1000)
(z * 2 +1000)
(z * 2 +100)
(z * 2 + 100)
(z * 2 +1000)
(z *2 + 100)
info()
info()
bye()
swirl()
5 + 7
x <- 5 + 7
x
x
Y <- X -3
y <- x -3
y
z <- c(1.1, 9,3.14)
?c()
>c
?c
z
c(z, 555,z)
z * 2 + 100
sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
c(1, 2, 3, 4) + c(0, 10, 1000)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
dir()
?list.files
list.files()
args(list.files)
old.dir <- args(list.files)
old.dir <- getwd()
dir.create()
testdir <- dir.create()
testdir <- dir.create(old.dir)
info()
nxt()
testdir <- die.create(old.dir)
testdir <- dir.create(old.dir)
dir.create(testdie)
dir.create(testdir)
testdir <- dir.creiate(testdir)
testdir <- dir.create(testdir)
dir.create("testdir")
swtwd(testdir)
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls("testdir")
ls()
list.files("testdir")
list.files()
file.exists("mytest.R")
file.info()
file.info("mytest.R")
file.rename(mytest.R)
file.rename("mytest.R")
file.rename("mytest.R") to mytest2.R
file.rename("mytest.R") to "mytest2.R"
file.rename(mytest.R) to "mytest2.R"
file.rename(mytest.R, mytest2.R)
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R")
file.copy("mytest2.R", "mytest3.r")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path(folder1, folder2)
file.path('folder1', 'folder2')
?dir.create
dir.create("testdir2") dircreate("testdir3")
dir.create("testdir2") dir.create("testdir3")
dir.create("testdir2") dir.create("testdir3")
?dir.create
dir.create(testdir2) dir.create(testdir3)
dir.create(testdir2, testdir3) dir.create(testdir3)
dir.create("testdir2", showWarnings = TRUE, recursive = FALSE, mode = "testdir3")
dir.create("testdir2", showWarnings = TRUE, recursive = FALSE)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd()
setwd(old.dir)
- be careful what format your data is in - certain operations can only be performed on certain data types
swirl()
1:20
pi"10"
pi:10
15:1
:
':'
":"
?':'
seq(1,20)
seq(0, 10, by=0.5)
seq(5, 10, length= 30)
my_seq <- seq(5, 10, lengtgh=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times= 40)
rep(c(0, 1, 2))
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
5 + 7
x <- 5 + 7
x
y <- x -3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555)
c(z, 555, z)
z * 2 + 100
sqrt(z-1)
my_sqrt <- sqrt(z- 1)
my_sqrt
my_div <- z / my_sqrt
my_dov
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files())
args(list.files
args(list.files)
args(list.files)
old.dir <- cur
old_dir <- new_dir
info()
skip()
testdir <- dir.crete()
testdir <- dir.create()
testdir <- dir.create()
skip()
setwd("testdir")
file.crete("mytest.R")
file.create("mytest.R")
ls()
ls(testdir)
skip()
file.exists(mytest.R)
file.exists("mytest.R")
file.info(mytest.R)
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R")
skip()
file.path("mytest3.R")
skip()
?dir.create
dir.create(testdir3)
dir.create("testdir3")
dir.create(filepath('testdir2', 'testdir3'))
dir.create(filepath('testdir2', 'testdir3'), recursive = TRUE)
dir.create(filepath('testdir2', 'testdir3'), recursive = TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
5 + 7
x <- 5 + 7
x
x - 3
y <- x-3
y
c(1.1,9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_siv <- z / my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
c(1, 2, 3, 4) + c(0, 10, 1000)
z * 2 + 1000
my_div
Amber Little
1
0
swirl()
1:20
pi:10
15:!
15:1
15:1
:
':'
?':'
seq(1, 20)
seq(0,10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
nunm_vect <- c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
install.packages(c("boot", "callr", "cli", "dplyr", "DT", "foreign", "ggplot2", "jsonlite", "lattice", "lifecycle", "MASS", "mime", "nlme", "nnet", "plyr", "prettyunits", "processx", "ps", "raster", "RCurl", "repr", "rstudioapi", "sp", "stringi", "survival", "testthat", "uuid", "vctrs", "yaml"))
install.packages(installr)
install.packages("installr")
updateR()
install.packages("tidyverse")
install.packages("shinyDashboardThemes")
install.packages("tibble")
setwd("~/Documents/Quick Access/Spring 2020/CS 424/Project One - Copy/Project-1-Copy")
getwd
getwd()
setwd("~/Documents/Quick Access/Spring 2020/CS 424/Project One - Copy")
getwd()
library(rsconnect)
rsconnect::deployApp('/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/Project One - Copy')
library(rsconnect)
library(rsconnect)
rsconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/Project One - Copy")
setwd("~/Documents/Quick Access/Spring 2020/CS 424/Project One - Copy")
setwd("~/Documents/Quick Access/Spring 2020/CS 424/Project-One -Copy")
getwd
getwd()
library(rsconnect)
rsconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/Project-One -Copy")
library(rsconnect)
rsconnect::deployApp('/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/Project-One -Copy')
getwd()
setwd("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/Project-One -Copy")
library(rsconnect)
rsconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/Project-One -Copy")
setwd("~/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj")
getwd()
library(rsconnect)
rsconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj")
rsconnect::setAccountInfo(name='amberlittle', token='F4C4307828E5FDA332ACED34A83BA4E8', secret='SIy/6VWc2u5oMpNmfpRUwgdkvdfdXZrMoTg7OBH5')
rsconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj")
clear()
clear
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='amberlittle',
token='F4C4307828E5FDA332ACED34A83BA4E8',
secret='SIy/6VWc2u5oMpNmfpRUwgdkvdfdXZrMoTg7OBH5')
library(rsconnect)
rsconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj")
rsconnect::setAccountInfo(name='amberlittle',token='F4C4307828E5FDA332ACED34A83BA4E8',secret='SIy/6VWc2u5oMpNmfpRUwgdkvdfdXZrMoTg7OBH5')
library(rsconnect)
rsconnect::deployApp('/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj')
./rsconnect/shinyapps.io/<account name>/<app.R>.dcf file.
./rsconnect/shinyapps.io/<account name>/<app.R>.dcf file.
rsconnect::setAccountInfo(name='amberlittle',
token='F4C4307828E5FDA332ACED34A83BA4E8',
secret='SIy/6VWc2u5oMpNmfpRUwgdkvdfdXZrMoTg7OBH5')
rsconnect::setAccountInfo(name='amberlittle',
token='F4C4307828E5FDA332ACED34A83BA4E8',
secret='SIy/6VWc2u5oMpNmfpRUwgdkvdfdXZrMoTg7OBH5')
getwd()
library(rsconnect)
rsconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj")
library(rsconnect)
rsconnect::deployApp('/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj')
./rsconnect/shinyapps.io/<amberlittle/Project One - Copy.Rproj>.dcf
rsconnect::setAccountInfo(name='amberlittle', token='F4C4307828E5FDA332ACED34A83BA4E8', secret='SIy/6VWc2u5oMpNmfpRUwgdkvdfdXZrMoTg7OBH5')
getwd()
library(rsconnect)
rsconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj")
./rsconnect/shinyapps.io/amberlittle/Project One - Copy.Rproj.dcf file.
./rsconnect/shinyapps.io/amberlittle/Project-1-Copy.Rproj
/rsconnect/shinyapps.io/amberlittle/Project-1-Copy.Rproj
rsconnect::setAccountInfo(name='amberlittle', token='F4C4307828E5FDA332ACED34A83BA4E8', secret='SIy/6VWc2u5oMpNmfpRUwgdkvdfdXZrMoTg7OBH5')
rsconnect::setAccountInfo(name='amberlittle', token='F4C4307828E5FDA332ACED34A83BA4E8', secret='SIy/6VWc2u5oMpNmfpRUwgdkvdfdXZrMoTg7OBH5')
rsconnect::terminateApp
rsconnect::setAccountInfo(name='amberlittle', token='F4C4307828E5FDA332ACED34A83BA4E8', secret='SIy/6VWc2u5oMpNmfpRUwgdkvdfdXZrMoTg7OBH5')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
getwd
getwd()
library(rsconnect)
rsconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj")
rsconnect::terminateApp
setwd("~/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj")
rsconnect::setAccountInfo(name='amberlittle', token='F4C4307828E5FDA332ACED34A83BA4E8', secret='SIy/6VWc2u5oMpNmfpRUwgdkvdfdXZrMoTg7OBH5')
getwd()
library(rsconnect)
rsconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj")
sconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj")
rsconnect::deployApp("/Users/amberlittle/Documents/Quick Access/Spring 2020/CS 424/LitteratiProj")
